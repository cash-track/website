name: Release

on:
  release:
    types: [ published ]

env:
  REPO: cashtrack/website
  CONTAINER_NAME: cashtrack_website
  WORKDIR: /var/www/cash-track.app/website

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        if: github.event_name != 'pull_request'
        uses: actions/checkout@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        if: github.event_name != 'pull_request'
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REPO }}
          tags: |
            type=semver,pattern={{version}}

      # Build and push Docker image with Build (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: [ build ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        if: github.event_name != 'pull_request'
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REPO }}
          tags: |
            type=semver,pattern={{version}}

      # Execute deployment script on the server
      # https://github.com/appleboy/ssh-action
      - name: Deploy
        uses: appleboy/ssh-action@master
        env:
          IMAGE: ${{ env.REPO }}:${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          BASE_URL: ${{ secrets.BASE_URL }}
          API_URL: ${{ secrets.API_URL }}
          WEB_APP_URL: ${{ secrets.WEB_APP_URL }}
          GOOGLE_ANALYTICS_ID: ${{ secrets.GOOGLE_ANALYTICS_ID }}
          CAPTCHA_CLIENT_KEY: ${{ secrets.CAPTCHA_CLIENT_KEY }}
          CAPTCHA_SECRET_KEY: ${{ secrets.CAPTCHA_SECRET_KEY }}
        with:
          host: ${{ secrets.PRODUCTION_SSH_HOST }}
          username: ${{ secrets.PRODUCTION_SSH_USER }}
          key: ${{ secrets.PRODUCTION_SSH_PRIVATE_KEY }}
          script: |
            cd ${{ env.WORKDIR }}
            docker pull ${{ env.IMAGE }}
            docker stop ${{ env.CONTAINER_NAME }}
            docker run -d \
              --rm \
              --name ${{ env.CONTAINER_NAME }} \
              -p 3000:3000 \
              -e BASE_URL="${{ env.BASE_URL }}" \
              -e API_URL="${{ env.API_URL }}" \
              -e WEB_APP_URL="${{ env.WEB_APP_URL }}" \
              -e GOOGLE_ANALYTICS_ID="${{ env.GOOGLE_ANALYTICS_ID }}" \
              -e CAPTCHA_CLIENT_KEY="${{ env.CAPTCHA_CLIENT_KEY }}" \
              -e CAPTCHA_SECRET_KEY="${{ env.CAPTCHA_SECRET_KEY }}" \
              ${{ env.IMAGE }}
